##《剑指Offer》面试题11:
题目：实习函数```double Power(double base, int exponent)```，求base的exponent次方，不得使用库函数，同时不需要考虑大数问题。

---

首先说明一下，大数问题即计算范围超过```long long```类型的范围，数字需要用数组记录，不能用变量记录。这里不需要考虑大数问题，我们考虑边界测试的时候就可以只考虑负数，小数的问题。

第一想法就是进去后for循环exponent次使base自乘，这样的程序存在问题有：

* exponent < 0的时候，答案出错；
* exponent = 0的时候，答案出错；

因此，需要对输出进行判断，处理各种输出的情况。其实主要有：base有三种情况，正数，0，负数；exponent有三种情况，正数，0，负数。其中只有```base = 0 && exponent < 0```这种情况是非法的，因为0不能作分母。其他情况只需分exponent<0和exponent>=0。

处理错误异常主要有三种办法：

|　　|优点|缺点|
|:----:|:-----------:|:----------------------:|
|返回值|和系统API一致|不能方便地使用计算机结果|
|全局变量|能够方便使用计算结果|可能忘记检查全局变量|
|异常|可以为不同的出错原因定义不同异常类型，逻辑清晰|有些语言不支持异常，抛出异常对性能有负面影响|

这里使用了全局变量来处理错误。

然后是算法的性能优化，for循环计算如果exponent较大的话，base需要多次计算。可以利用a^n = a^(n/2)*a^(n/2)的思想来计算。其中使用位操作来实现除以2，和取模判断exponent是奇数还是偶数。详细代码可以项目文件。

其中需要注意的一点：double类型的数字判断相等不能直接使用```==```，因为计算机内部记录double值会有误差，应该使两数相减判断差值是否在一定程度的小范围内，如程序中的```equal()```。

